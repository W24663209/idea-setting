<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="814" />
    <option name="newTranslationDialogY" value="473" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="Cannot deserialize value of type `com.ruoyi.merchant.domain.Merchant` from Array value (token `JsonToken.START_ARRAY`)" />
      <item value="org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.ruoyi.merchant.domain.Merchant` from Array value (token `JsonToken.START_ARRAY`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `com.ruoyi.merchant.domain.Merchant` from Array value (token `JsonToken.START_ARRAY`)" />
      <item value="scan Package By Super" />
      <item value="Base Service" />
      <item value="Exception In Initializer Error" />
      <item value="找不到service" />
      <item value="余额不足" />
      <item value="SECONDS" />
      <item value="Role" />
      <item value="combination Count" />
      <item value="arrangement Count" />
      <item value="sync Send" />
      <item value="sendDefaultImpl call timeout; nested exception is org.apache.rocketmq.remoting.exception.RemotingTooMuchRequestException: sendDefaultImpl call timeout" />
      <item value="attempt to unlock lock, not locked by current thread by node id: 78afc028-12f9-460d-8ba9-0b818eea91e4 thread-id: 95" />
      <item value="Acquires the lock. If the lock is not available then the current thread becomes disabled for thread scheduling purposes and lies dormant until the lock has been acquired. Implementation Considerations A Lock implementation may be able to detect erroneous use of the lock, such as an invocation that would cause deadlock, and may throw an (unchecked) exception in such circumstances. The circumstances and the exception type must be documented by that Lock implementation." />
      <item value="com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException: Deadlock found when trying to get lock; try restarting transaction" />
      <item value="Deadlock found when trying to get lock; try restarting transaction" />
      <item value="force Unlock" />
      <item value="Acquires the lock if it is free within the given waiting time and the current thread has not been interrupted. If the lock is available this method returns immediately with the value true. If the lock is not available then the current thread becomes disabled for thread scheduling purposes and lies dormant until one of three things happens: The lock is acquired by the current thread; or Some other thread interrupts the current thread, and interruption of lock acquisition is supported; or The specified waiting time elapses If the lock is acquired then the value true is returned. If the current thread: has its interrupted status set on entry to this method; or is interrupted while acquiring the lock, and interruption of lock acquisition is supported, then InterruptedException is thrown and the current thread's interrupted status is cleared. If the specified waiting time elapses then the value false is returned. If the time is less than or equal to zero, the method will not wait at all. Implementation Considerations The ability to interrupt a lock acquisition in some implementations may not be possible, and if possible may be an expensive operation. The programmer should be aware that this may be the case. An implementation should document when this is the case. An implementation can favor responding to an interrupt over normal method return, or reporting a timeout. A Lock implementation may be able to detect erroneous use of the lock, such as an invocation that would cause deadlock, and may throw an (unchecked) exception in such circumstances. The circumstances and the exception type must be documented by that Lock implementation. Params: time – the maximum time to wait for the lock unit – the time unit of the time argument Returns: true if the lock was acquired and false if the waiting time elapsed before the lock was acquired Throws: InterruptedException – if the current thread is interrupted while acquiring the lock (and interruption of lock acquisition is supported)" />
      <item value="Could not open JDBC Connection for transaction; nested exception is java.sql.SQLTransientConnectionException: DatebookHikariCP - Connection is not available, request timed out after 30003ms." />
      <item value="try Lock Async" />
      <item value="Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19900be7]" />
      <item value="Could not open JDBC Connection for transaction; nested exception is java.sql.SQLTransientConnectionException: DatebookHikariCP - Connection is not available, request timed out after 30838ms." />
      <item value="One record is expected, but the query result is multiple records" />
      <item value="subtract" />
      <item value="比较" />
      <item value="'\xE6\x94\xAF\xE4\xBB\x98...' for column 'remark' at row 1" />
      <item value="Invalid ID for ZoneOffset, invalid format: AsiaKolkata" />
      <item value="of Hours Minutes" />
      <item value="of Total Seconds" />
      <item value="Invalid ID for ZoneOffset, invalid format: AsiaShanghai" />
      <item value="get Time Zone" />
      <item value="new Scheduled Thread" />
      <item value="destination" />
      <item value="send And Receive" />
      <item value="attempt to unlock lock, not locked by current thread by node id: 1d64a0cf-50ba-40db-a26b-c7167316615d thread-id: 173" />
      <item value="attempt to unlock lock, not locked by current thread by node id: e1cb61d8-d02e-4618-8b0c-94f1e528ca17 thread-id: 133" />
      <item value="nested exception is org.apache.ibatis.exceptions.PersistenceException:" />
      <item value="error may exist in cnbensunmapperCollectionPollingMapper.java (best guess)" />
      <item value="best guess" />
      <item value="error occurred while executing an update" />
      <item value="Incorrect signature method" />
      <item value="Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: comruoyiwebutilMerchantUtil" />
      <item value="Incorrect signature" />
      <item value="签名类型错误" />
      <item value="金额不能为空" />
      <item value="amount not null" />
      <item value="cn.bensun.emuns.ResultCodeEnum cannot be cast to cn.bensun.core.domain.PayInRes" />
      <item value="Decryption error" />
      <item value="before" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="389" />
        <entry key="ENGLISH" value="390" />
        <entry key="ESTONIAN" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="KURDISH" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1667985544108" />
  </component>
  <component name="Settings">
    <option name="aliTranslateSettings">
      <app-key>
        <option name="appId" value="LTAI5tLQNbpeipWseroscoNa" />
      </app-key>
    </option>
    <option name="showWordForms" value="false" />
    <option name="translator" value="ALI" />
  </component>
</application>